@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">
@{
  int nullCount = 0;
  Decimal total = 0m;
  foreach (var coinSummary in Model.Summaries())
  {
    if (coinSummary.CashValue == null) nullCount++;
    else total += coinSummary.CashValue.Value;
  }
  string totalValue = total.ToString("c") + (nullCount == 0 ? "" : $" ({nullCount} coin types pending...)");
  <h1 class="display-4">@totalValue</h1>
}
</div>

<script>
// from the outstanding stackoverflow answer https://stackoverflow.com/a/901144
function getParameterByName(name, url = window.location.href) {
    name = name.replace(/[\[\]]/g, '\\$&');
    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
        results = regex.exec(url);
    if (!results) return null;
    if (!results[2]) return '';
    return decodeURIComponent(results[2].replace(/\+/g, ' '));
}

const sortBy = getParameterByName('sortBy') || 'cashValue';
const nextSortByCoinType = sortBy === 'coinType' ? 'coinTypeDescending' : 'coinType';
const nextSortByCashValue = sortBy === 'cashValue' ? 'cashValueAscending' : 'cashValue';
</script>

<table class="table table-sm ">
  <thead>
    <tr>
      <th scope="col">
        <button id='coin-type-sort-button' type="button" class="btn btn-secondary btn-sm"
          onClick="window.location = location.pathname + '?sortBy=' + nextSortByCoinType">
          Name
        </button>
      </th>
      <th scope="col">Count</th>
      <th scope="col">Price per coin</th>
      <th scope="col">
        <button id='cash-value-sort-button' type="button" class="btn btn-secondary btn-sm"
          onClick="window.location = location.pathname + '?sortBy=' + nextSortByCashValue">
          Cash Value
        </button>
      </th>
    </tr>
  </thead>
  <tbody id='coin-summary-rows'>
@{
  var ordersByCoinType = Model.OrdersByCoinType("date");

  string sortBy = HttpContext.Request.Query.TryGetValue("sortBy", out var sortByValues) ? sortByValues[0] : null;
  foreach (var s in Model.Summaries(sortBy))
  {
    <tr>
      <td id='coin-type' value='@s.CoinType'>
        <a data-toggle="collapse" href="#collapse-@s.CoinType" role="button" aria-expanded="false" aria-controls="collapse-@s.CoinType">
          @s.FriendlyName
        </a>
      </td>
      <td>@s.CoinCount.ToString("G29")</td>
      <td>@s.CoinPrice?.PerCoinCost.ToString("c")</td>
      <td id='cash-value' value='@s.CashValue?.ToString()'>@s.CashValue?.ToString("c")</td>
    </tr>
    <tr class="collapse" id="collapse-@s.CoinType">
      <td colspan="4">
        <div class="card card-body">
          <table class="table table-sm">
            <thead>
              <tr>
                <td scope="col">Date</td>
                <td scope="col">Count</td>
                <td scope="col">Per Coin</td>
                <td scope="col">Total</td>
              </tr>
            </thead>
            <tbody>
@{
    var orders = ordersByCoinType[s.CoinType];
    foreach (var o in orders)
    {
              <tr>
                <td>@o.Time.LocalDateTime.ToString("g")</td>
                <td>@o.CoinCount.ToString("G29")</td>
                <td>$@o.PerCoinCost.ToString()</td>
                <td>@o.TotalCost.ToString("c")</td>
              </tr>
    }
}
            </tbody>
          </table>
        </div>
      </td>
    </tr>
  }
}
  </tbody>
</table>