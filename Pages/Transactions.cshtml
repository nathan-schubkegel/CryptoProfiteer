@page
@model TransactionsModel
@{
  ViewData["Title"] = "Transactions";
}
<h1>
  @ViewData["Title"]
  <button type="button" class="btn btn-secondary" style="margin-left:20px;" 
    onclick="
    {
      let input = document.getElementById('upload-coinbase-fills-input');
      input.onchange = async e => {
        let formData = new FormData();
        try {
          var file = e.target.files[0];
          if (!file) return;
          formData.append('file', file);
        }
        finally {
          // make sure that re-attempts always trigger 'onchange' again
          input.value = '';
        }
        let spinny = document.getElementById('upload-coinbase-fills-spinny');
        spinny.style = '';
        try {
          let r = await fetch('/api/fillsCsv', {method: 'POST', body: formData});
          if (r.ok) {
            location.reload();
          }
          else {
            let t = await r.text();
            alert(t);
          }
        }
        catch (e) {
          alert(e);
        }
        finally {
          spinny.style = 'display: none;';
        }
      };
      input.click();
    }"
  >
    Upload Coinbase Fills.csv
  </button>
  <input id="upload-coinbase-fills-input" type="file" name="name" style="display: none;" />
  <img id="upload-coinbase-fills-spinny" src="/spinny-arrows.gif" style="display: none;" />

</h1>

<script>
let filteredBy = '';
function filterBy(coinType)
{
  let body = document.getElementById('transaction-rows');
  for (var row of Array.from(body.children)) {
    let cell = row.children.namedItem('coin-type');
    let button = cell.children.namedItem('coin-type-filter-button');
    if (filteredBy) {
      row.style.display = '';
      button.className = button.className.replace('btn-primary', 'btn-secondary');
    }
    else if (button.value === coinType) {
      row.style.display = '';
      button.className = button.className.replace('btn-secondary', 'btn-primary');
    }
    else {
      row.style.display = 'none';
    }
  }
  filteredBy = filteredBy ? '' : coinType;
}
</script>

<table class="table table-sm ">
  <thead>
    <tr>
      <th scope="col"></th>
      <th scope="col"></th>
      <th scope="col">Name</th>
      <th scope="col">Count</th>
      <th scope="col">Per Coin</th>
      <th scope="col">Fee</th>
      <th scope="col">Total</th>
    </tr>
  </thead>
  <tbody id='transaction-rows'>
@foreach (var t in Model.OrderedTransactions) 
{
    <tr>
      <td>@t.Time.LocalDateTime.ToString("g")</td>
      <td>@t.TransactionType</td>
      <td id='coin-type'>
        <button id='coin-type-filter-button' type="button" class="btn btn-secondary btn-sm"
          onclick='filterBy("@t.CoinType")'
          value='@t.CoinType'
        >
          @t.FriendlyName
        </button>
      </td>
      <td>@t.CoinCount.ToString("G29")</td>
      <td>$@t.PerCoinCost.ToString()</td>
      <td>@t.Fee.ToString("c")</td>
      <td>@t.TotalCost.ToString("c")</td>
    </tr>
}
  </tbody>
</table>
