@page
@model TransactionsModel
@{
  ViewData["Title"] = "Transactions";
}
<h1>
  @ViewData["Title"]
  <button type="button" class="btn btn-secondary" style="margin-left:20px;" 
    onclick="
    {
      let input = document.getElementById('upload-coinbase-fills-input');
      input.onchange = async e => {
        let formData = new FormData();
        try {
          var file = e.target.files[0];
          if (!file) return;
          formData.append('file', file);
        }
        finally {
          // make sure that re-attempts always trigger 'onchange' again
          input.value = '';
        }
        let spinny = document.getElementById('upload-coinbase-fills-spinny');
        spinny.style = '';
        try {
          let r = await fetch('/api/fillsCsv', {method: 'POST', body: formData});
          if (r.ok) {
            location.reload();
          }
          else {
            let t = await r.text();
            alert(t);
          }
        }
        catch (e) {
          alert(e);
        }
        finally {
          spinny.style = 'display: none;';
        }
      };
      input.click();
    }"
  >
    Upload Coinbase Fills.csv
  </button>
  <input id="upload-coinbase-fills-input" type="file" name="name" style="display: none;" />
  <img id="upload-coinbase-fills-spinny" src="/spinny-arrows.gif" style="display: none;" />

</h1>

<table class="table table-sm ">
  <thead>
    <tr></tr>
      <th scope="col"></th>
      <th scope="col"></th>
      <th scope="col">Name</th>
      <th scope="col">Count</th>
      <th scope="col">Per Coin</th>
      <th scope="col">Fee</th>
      <th scope="col">Total</th>
    </tr>
  </thead>
@foreach (var t in Model.OrderedTransactions) 
{
  <tbody>
    <tr>
      <td>@t.Time.LocalDateTime.ToString("g")</td>
      <td>@t.TransactionType</td>
      <td>@t.CoinType</td>
      <td>@t.CoinCount</td>
      <td>$@t.PerCoinCost.ToString()</td>
      <td>@t.Fee.ToString("c")</td>
      <td>@t.TotalCost.ToString("c")</td>
    </tr>
  </tbody>
}
</table>
