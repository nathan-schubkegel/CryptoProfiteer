@page
@model OrdersModel
@{
  ViewData["Title"] = "Orders";
}

<style>
.table > thead > tr:first-child > th {
    border: none;
}
</style>

<h1>
  @ViewData["Title"]
</h1>

<script>
let filteredBy = '';
function filterBy(coinType)
{
  let body = document.getElementById('order-rows');
  for (var row of Array.from(body.children)) {
    let cell = row.children.namedItem('coin-type');
    let button = cell.children.namedItem('coin-type-filter-button');
    if (filteredBy) {
      row.style.display = '';
      button.className = button.className.replace('btn-primary', 'btn-secondary');
    }
    else if (button.value === coinType) {
      row.style.display = '';
      button.className = button.className.replace('btn-secondary', 'btn-primary');
    }
    else {
      row.style.display = 'none';
    }
  }
  
  body = document.getElementById('summary-coin-prices');
  for (var row of Array.from(body.children)) {
    if (filteredBy) {
      row.style.display = 'none';
    }
    else if (row.id === 'summary-coin-price-for-' + coinType) {
      row.style.display = '';
    }
    else {
      row.style.display = 'none';
    }
  }

  filteredBy = filteredBy ? '' : coinType;
}
</script>

<div id="summary-coin-prices">
  @foreach (var price in Model.CoinPrices) {
    <div style="display: none" id="summary-coin-price-for-@price.CoinType">@price.FriendlyName currently at $@price.PerCoinCost.ToString()</div>
  }
</div>

<script>
// from the outstanding stackoverflow answer https://stackoverflow.com/a/901144
function getParameterByName(name, url = window.location.href) {
    name = name.replace(/[\[\]]/g, '\\$&');
    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
        results = regex.exec(url);
    if (!results) return null;
    if (!results[2]) return '';
    return decodeURIComponent(results[2].replace(/\+/g, ' '));
}

const sortBy = getParameterByName('sortBy') || 'date';
const nextSortByDate = sortBy === 'date' ? 'dateAscending' : 'date';
const nextSortByCoinType = sortBy === 'coinType' ? 'coinTypeDescending' : 'coinType';
</script>

<table class="table table-sm">
  <thead>
    <tr>
      <th scope="col">
        <button id='date-sort-button' type="button" class="btn btn-secondary btn-sm"
          onClick="window.location = location.pathname + '?sortBy=' + nextSortByDate">
          Date
        </button>
      </th>
      <th scope="col"></th>
      <th scope="col">
        <button id='coin-type-sort-button' type="button" class="btn btn-secondary btn-sm"
          onClick="window.location = location.pathname + '?sortBy=' + nextSortByCoinType">
          Name
        </button>
      </th>
      <th scope="col">Count</th>
      <th scope="col">Per Coin</th>
      <th scope="col">Fee</th>
      <th scope="col">Total</th>
    </tr>
  </thead>
  <tbody id='order-rows'>
@{
  string sortBy = HttpContext.Request.Query.TryGetValue("sortBy", out var sortByValues) ? sortByValues[0] : null;
  foreach (var t in Model.Orders(sortBy)) 
  {
    <tr>
      <td>@t.Time.ToLocalTime().ToString("g")</td>
      <td>@t.TransactionType</td>
      <td id='coin-type'>
        <button id='coin-type-filter-button' type="button" class="btn btn-secondary btn-sm"
          onclick='filterBy("@t.CoinType")'
          value='@t.CoinType'
        >
          @t.FriendlyName
        </button>
      </td>
      <td>@t.CoinCount.ToString("G29")</td>
      <td>$@t.PerCoinCost.ToString()</td>
      <td>@t.Fee.ToString("c")</td>
      <td>@t.TotalCost.ToString("c")</td>
    </tr>
  }
}
  </tbody>
</table>
